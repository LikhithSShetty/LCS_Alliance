import mongoose, { Schema, Document } from \'mongoose\';\n\n// Interface for the Video document\nexport interface IVideo extends Document {\n  videoId: string; // YouTube Video ID\n  classId: mongoose.Types.ObjectId; // Reference to the Class\n  title: string;\n  subject: string;\n  date: string; // Store as string YYYY-MM-DD\n  time: string; // Store as string HH:MM AM/PM\n  description?: string;\n  duration?: string; // e.g., \'45:20\'\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Define the Video schema\nconst VideoSchema: Schema<IVideo> = new Schema(\n  {\n    videoId: {\n      type: String,\n      required: [true, \'YouTube Video ID is required\'],\n      trim: true,\n    },\n    classId: {\n      type: Schema.Types.ObjectId,\n      ref: \'Class\', // Link to the Class model\n      required: true,\n    },\n    title: {\n      type: String,\n      required: [true, \'Video title is required\'],\n      trim: true,\n    },\n    subject: {\n      type: String,\n      required: [true, \'Video subject is required\'],\n      trim: true,\n    },\n    date: {\n      type: String,\n      required: [true, \'Video date is required\'],\n    },\n    time: {\n      type: String,\n      required: [true, \'Video time is required\'],\n    },\n    description: {\n      type: String,\n      trim: true,\n    },\n    duration: {\n      type: String,\ // e.g., \'45:20\' or similar format\n      trim: true,\n    },\n  },\n  {\n    timestamps: true, // Adds createdAt and updatedAt\n  }\n);\n\n// Index for faster querying of videos by class\nVideoSchema.index({ classId: 1 });\n\n// Export the Video model\nconst Video = mongoose.model<IVideo>(\'Video\', VideoSchema);\n\nexport default Video; 